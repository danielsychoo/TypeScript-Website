{"componentChunkName":"component---src-templates-play-example-tsx","path":"/ko/play/3-8/jsdoc-improvements/accessibility-modifiers.js.html","result":{"pageContext":{"name":"Accessibility Modifiers","title":"Accessibility Modifiers","lang":"ko","html":" @ts-check\n\n TypeScript에 대한 JSDoc 지원은 \n 클래스 프로퍼티에 접근 지정자를 지원하기 위해 확장했습니다:\n\n @public - 기본값이며, 1로 설정하지 않으면 발생하는 것 입니다.\n @private - 필드가 정의된 같은 클래스에서만\n            접근할 수 있는 필드 \n @protected - 필드가 정의되고 그 클래스의 하위 클래스가 있는\n              클래스에 접근될 수 있는 필드\n\n\n Animal의 기본 클래스입니다, private과 protected 필드를 둘 다 가지고 있습니다.\n 하위 클래스는 \"this.isFast\"를 접근할 수 있지만,\n \"this.type\"은 접근할 수 없습니다.\n\n 이런 클래스의 외부에서,\n 두 필드는 보이지 않고 // @ts-check가 실행 중일 때\n 컴파일러 에러를 반환합니다:\n\n<code><pre>\nclass Animal {\n  constructor(type) {\n    /** @private */\n    this.type = type\n    /** @protected */\n    this.isFast = type === 'cheetah'\n  }\n\n  makeNoise() {\n    // 아마 꽤 많이 조용할 것입니다\n    if (this.type === 'bengal') {\n      console.log('')\n    } else {\n      throw new Error('makeNoise was called on a base class')\n    }\n  }\n}\n\nclass Cat extends Animal {\n  constructor(type) {\n    super(type || 'housecat')\n  }\n\n  makeNoise() {\n    console.log('meow')\n  }\n\n  runAway() {\n    if (this.isFast) {\n      console.log('Got away')\n    } else {\n      console.log('Did not make it')\n    }\n  }\n}\n\nclass Cheetah extends Cat {\n  constructor() {\n    super('cheetah')\n  }\n}\n\nclass Bengal extends Cat {\n  constructor() {\n    super('bengal')\n  }\n}\n\nconst housecat = new Cat()\nhousecat.makeNoise()\n\n// 이것은 사용할 수 없습니다\nhousecat.type\nhousecat.isFast\n\n</pre></code>\n// 여러분은 글에서 더 많은 것을 읽을 수 있습니다\n https://devblogs.microsoft.com/typescript/announcing-typescript-3-8-beta/#jsdoc-modifiers\n","redirectHref":"ko/play/?ts=3.8.3#example/accessibility-modifiers"}},"staticQueryHashes":[]}